version: 2.1

orbs:
  keeper: gravitee-io/keeper@0.6.2
  gh: circleci/github-cli@2.2.0

commands:
  compute-sanitized-branch-name:
    steps:
      - run:
          name: Compute a sanitized version of branch name
          command: |
            export BRANCH_ID=$(echo "$CIRCLE_BRANCH" | sed -E 's/[~^]+//g' | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr "[:upper:]" "[:lower:]" | cut -c -60)
            echo "export BRANCH_ID=$BRANCH_ID" >> $BASH_ENV

jobs:
  build:
    docker:
      - image: cimg/ruby:3.1
    environment:
      BUNDLE_PATH: ~/repo/vendor/bundle
    steps:
      - checkout
      - restore_cache:
          keys:
            - rubygems-v1-{{ checksum "Gemfile.lock" }}
            - rubygems-v1-fallback
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: rubygems-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - compute-sanitized-branch-name
      - run:
          name: Jekyll build
          command: bundle exec jekyll build --baseurl $BRANCH_ID
      - persist_to_workspace:
          root: ./
          paths:
            - _site

  deploy-on-azure-storage:
    docker:
      # Version can be found here https://docs.microsoft.com/en-us/cli/azure/release-notes-azure-cli
      # be careful when updating the version as it looks it is not following semver
      - image: mcr.microsoft.com/azure-cli:2.42.0
    resource_class: small
    steps:
      - keeper/env-export:
          secret-url: keeper://UryantA7MvZe8fkWwcUt8g/field/login
          var-name: AZURE_APPLICATION_ID
      - keeper/env-export:
          secret-url: keeper://UryantA7MvZe8fkWwcUt8g/custom_field/tenant
          var-name: AZURE_TENANT
      - keeper/env-export:
          secret-url: keeper://UryantA7MvZe8fkWwcUt8g/field/password
          var-name: AZURE_APPLICATION_SECRET
      - keeper/env-export:
          secret-url: keeper://5Q6zLSJgoPQEPhz6Uppwdw/field/password
          var-name: AZURE_STORAGE_CONNECTION_STRING
      - attach_workspace:
          at: .
      - compute-sanitized-branch-name
      - run:
          name: Login into Azure Storage and upload dist
          command: |
            az login --service-principal -u $AZURE_APPLICATION_ID --tenant $AZURE_TENANT -p $AZURE_APPLICATION_SECRET
            CONTAINER_EXISTS=$(az storage container exists -n $BRANCH_ID | jq .exists)
            if [ "$CONTAINER_EXISTS" = false ] ; then
              echo "Creating container $BRANCH_ID"
              az storage container create -n $BRANCH_ID --public-access blob
            fi   
            az storage blob upload-batch -s _site -d $BRANCH_ID --overwrite true

  comment-pr-after-deployment:
    docker:
      - image: cimg/node:18.3
    resource_class: small
    steps:
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: GITHUB_TOKEN
      - checkout
      - gh/setup
      - compute-sanitized-branch-name
      - run:
          name: Edit Pull Request Description
          command: |
            # First check there is an associated pull request, otherwise just stop the job here
            if ! gh pr view --json title;
            then
              echo "No PR found for this branch, stopping the job here."
              exit 0
            fi

            # If PR state is different from OPEN
            if [ "$(gh pr view --json state --jq .state)" != "OPEN" ];
            then
              echo "PR is not opened, stopping the job here."
              exit 0
            fi

            export PR_BODY_UI_SECTION="
            <!-- UI placeholder -->
            ðŸš€ CI was able to deploy the build of this PR, so you can now try it directly [here](https://graviteedocs.blob.core.windows.net/${BRANCH_ID}/index.html)
            <!-- UI placeholder end -->
            "

            export CLEAN_BODY=$(gh pr view --json body --jq .body | sed '/UI placeholder -->/,/UI placeholder end -->/d')

            gh pr edit --body "$CLEAN_BODY$PR_BODY_UI_SECTION"

  remove-old-containers:
    docker:
      - image: mcr.microsoft.com/azure-cli:latest
    resource_class: small
    steps:
      - keeper/env-export:
          secret-url: keeper://UryantA7MvZe8fkWwcUt8g/field/login
          var-name: AZURE_APPLICATION_ID
      - keeper/env-export:
          secret-url: keeper://UryantA7MvZe8fkWwcUt8g/custom_field/tenant
          var-name: AZURE_TENANT
      - keeper/env-export:
          secret-url: keeper://UryantA7MvZe8fkWwcUt8g/field/password
          var-name: AZURE_APPLICATION_SECRET
      - keeper/env-export:
          secret-url: keeper://5Q6zLSJgoPQEPhz6Uppwdw/field/password
          var-name: AZURE_STORAGE_CONNECTION_STRING
      - run:
          name: install coreutils to manipulate dates
          command: |
            apk add coreutils
      - run:
          name: Login into Azure Storage and purge containers older than 30days
          command: |
            az login --service-principal -u $AZURE_APPLICATION_ID --tenant $AZURE_TENANT -p $AZURE_APPLICATION_SECRET

            lowerRange=$(date -d 'now - 30 days' +%s)

            for containerName in $(az storage container list  | jq -r '.[] | .name'); do
              lastModifiedDateString=$(az storage blob list --show-next-marker -c $containerName --num-results 1 | jq -r '.[] | .properties.lastModified | select( . != null )')
              lastModifiedDate=$(date -d "$lastModifiedDateString" +%s)
              if [ "$lowerRange" -gt "$lastModifiedDate" ];
              then
                echo "Deleting container: $containerName"
                az storage container delete -n $containerName
              fi
            done

workflows:
  build:
    jobs:
      - build
      - deploy-on-azure-storage:
          filters:
            branches:
              ignore:
                - master
            tags:
              ignore:
                - /.*/
          context: cicd-orchestrator
          requires:
            - build
      - comment-pr-after-deployment:
          filters:
            branches:
              ignore:
                - master
            tags:
              ignore:
                - /.*/
          context: cicd-orchestrator
          requires:
            - deploy-on-azure-storage

  purge-storage-containers:
    triggers:
      - schedule:
          filters:
            branches:
              only:
                - master
          # Every Sunday, at 05:00am
          cron: "0 5 * * 0"
    jobs:
      - remove-old-containers:
          context: cicd-orchestrator
